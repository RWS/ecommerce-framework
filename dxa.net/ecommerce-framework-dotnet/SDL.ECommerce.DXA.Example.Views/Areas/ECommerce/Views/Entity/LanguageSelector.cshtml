@model Configuration
@{
    var siteLocalizations = WebRequestContext.Localization.SiteLocalizations;
    var filteredLocalizations = new List<Localization>();
    if (siteLocalizations.Count > 1)
    {
        var excludedLocalizations = new List<string>();
        if (Model.Settings.ContainsKey("suppressLocalizations"))
        {
            excludedLocalizations = Model.Settings["suppressLocalizations"].Split(',').Select(l => ("/" + l.Trim())).ToList();
        }
        foreach (var loc in siteLocalizations)
        {
            if (!excludedLocalizations.Contains(loc.Path))
            {
                filteredLocalizations.Add(loc);
            }
        }
    }
    var redirectId = WebRequestContext.PageModel != null ? WebRequestContext.PageModel.Id : "";
    var defaultItem = Model.Settings.ContainsKey("defaultContentLink") ? Model.Settings["defaultContentLink"].Split('-')[1] : null;

    // E-Commerce data
    //
    var currentCategory = ECommerceContext.Get(ECommerceContext.CATEGORY) as ICategory;
    var currentProduct = ECommerceContext.Get(ECommerceContext.PRODUCT) as IProduct;
}

@if (currentCategory != null || currentProduct != null)
{
    <div class="@Model.HtmlClasses" @Html.DxaEntityMarkup()>
        <select class="selectpicker" data-width="auto">
            @foreach (var loc in filteredLocalizations)
            {
                var parms = (currentProduct != null ? "productId=" + currentProduct.Id : "categoryId=" + currentCategory.Id);
                parms += "&defaultPath=" + loc.Path;
                <option value="@loc.LocalizationId" data-href="@(WebRequestContext.Localization.Path)/ecom-resolve?@parms" @(loc.LocalizationId == WebRequestContext.Localization.LocalizationId ? "selected" : "")>
                    @loc.Language
                </option>
            }
        </select>
    </div>
}
else if (redirectId != null && filteredLocalizations.Count > 1)
{
    <div class="@Model.HtmlClasses" @Html.DxaEntityMarkup()>
        <select class="selectpicker" data-width="auto">
            @foreach (var loc in filteredLocalizations)
            {
                var parms = "localizationId=" + loc.LocalizationId + (defaultItem != null ? "&defaultItemId=" + defaultItem : "");
                parms += "&defaultPath=" + loc.Path;
                <option value="@loc.LocalizationId" data-href="@(WebRequestContext.Localization.Path)/resolve/@(redirectId)?@parms" @(loc.LocalizationId == WebRequestContext.Localization.LocalizationId ? "selected" : "")>
                    @loc.Language
                </option>
            }
        </select>
    </div>
}